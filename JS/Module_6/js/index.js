"use strict"

/*
  –°–µ—Ç—å —Ñ–∞—Å—Ç—Ñ—É–¥–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –≥–∞–º–±—É—Ä–≥–µ—Ä–æ–≤.
  –û—Å–Ω–æ–≤–∞ (–±—É–ª–æ—á–∫–∞) –≥–∞–º–±—É—Ä–≥–µ—Ä–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–æ–π –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫–æ–π (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):
	- –º–∞–ª–µ–Ω—å–∫–∞—è (+30 –¥–µ–Ω–µ–≥, +50 –∫–∞–ª–æ—Ä–∏–π)
	- –±–æ–ª—å—à–∞—è (+50 –¥–µ–Ω–µ–≥, +100 –∫–∞–ª–æ—Ä–∏–π)
  –ì–∞–º–±—É—Ä–≥–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å —Å –æ–¥–Ω–æ–π –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∏–¥–æ–≤ –Ω–∞—á–∏–Ω–æ–∫ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):
	- —Å—ã—Ä–æ–º (+15 –¥–µ–Ω–µ–≥, +20 –∫–∞–ª–æ—Ä–∏–π)
	- —Å–∞–ª–∞—Ç–æ–º (+20 –¥–µ–Ω–µ–≥, +5 –∫–∞–ª–æ—Ä–∏–π)
	- –º—è—Å–æ–º (+35 –¥–µ–Ω–µ–≥, +15 –∫–∞–ª–æ—Ä–∏–π)
  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –≥–∞–º–±—É—Ä–≥–µ—Ä –º–æ–∂–Ω–æ:
	- –ø–æ—Å—ã–ø–∞—Ç—å –ø—Ä–∏–ø—Ä–∞–≤–æ–π (+10 –¥–µ–Ω–µ–≥, +0 –∫–∞–ª–æ—Ä–∏–π)
	- –ø–æ–ª–∏—Ç—å —Å–æ—É—Å–æ–º (+15 –¥–µ–Ω–µ–≥, +5 –∫–∞–ª–æ—Ä–∏–π)
  –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç, —Ä–∞—Å—á–∏—Ç—ã–≤–∞—é—â–∏–π —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –≥–∞–º–±—É—Ä–≥–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É—Ç–µ –û–û–ü –ø–æ–¥—Ö–æ–¥,
  —Å–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Hamburger, –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, –º–µ—Ç–æ–¥—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π –∏ —Ä–∞—Å—Å—á–µ—Ç–∞ –Ω—É–∂–Ω—ã—Ö –≤–µ–ª–∏—á–∏–Ω.
  –ù–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–º—É jsDoc –æ–ø–∏—Å–∞–Ω–∏—é. –¢–æ –µ—Å—Ç—å –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å
  —É–∫–∞–∑–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –¥–∞–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞.
*/

/**
 * –ö–ª–∞—Å—Å, –æ–±—ä–µ–∫—Ç—ã –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–ø–∏—Å—ã–≤–∞—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–∞–º–±—É—Ä–≥–µ—Ä–∞.
 */



class Hamburger {
    constructor(size, staffing) {
        this.size = size;
        this.toppings = [];
        this.staffing = staffing;
    }

    /**
     * –î–æ–±–∞–≤–∏—Ç—å topping –∫ –≥–∞–º–±—É—Ä–≥–µ—Ä—É. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ topping, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –æ–Ω–∏ —Ä–∞–∑–Ω—ã–µ.
     * @param {String} topping - –¢–∏–ø –¥–æ–±–∞–≤–∫–∏
     */
    addTopping(topping) {
        //!this.toppings.includes(topping)? this.toppings.push(topping):null;
        if (!this.toppings.includes(topping)) {
            this.toppings.push(topping);
            console.log(topping);
            return this.toppings;
        }
        return this.toppings;
    }

    /*let order = new Hamburger('big', 'topping', 'staffing');
    console.log(order);
    order.addTopping(['TOPPING_SPICE','TOPPING_SAUCE']);*/

    /*
         * –£–±—Ä–∞—Ç—å topping, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –æ–Ω–∞ —Ä–∞–Ω–µ–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞
         * @param {String} topping - –¢–∏–ø –¥–æ–±–∞–≤–∫–∏*/

    removeTopping(topping) {
        this.toppings = this.toppings.filter(function (el) {
            return el !== topping;
        });
        // return this.toppings;
    };

    /*let order = new Hamburger('big', 'staffing');
    order.addTopping('TOPPING_SPICE');
    order.addTopping('TOPPING_SAUCE');
    order.removeTopping('TOPPING_SPICE');456
    console.log(order);*/

    /*
         * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ toppings
         * @returns {Array} - –ú–∞—Å—Å–∏–≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö topping, —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç Hamburger.TOPPING_*
         *
         * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.toppings –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ –¥–æ–±–∞–≤–æ–∫*/

    getToppings() {
        return this.toppings
    }
}

    /*let order = new Hamburger('big', 'staffing');
    order.addTopping('TOPPING_SPICE');
    order.addTopping('TOPPING_SAUCE');
    order.removeTopping('TOPPING_SPICE');
    console.log(order);
    console.log(order.getToppings());*/


    /*     * –£–∑–Ω–∞—Ç—å —Ä–∞–∑–º–µ—Ä –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
         * @returns {String} - —Ä–∞–∑–º–µ—Ä –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
         *
         * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.size –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç —Ä–∞–∑–º–µ—Ä*/


/*    getSize() {
    }
};*/
    /*
     * –£–∑–Ω–∞—Ç—å –Ω–∞—á–∏–Ω–∫—É –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
     * @returns {String} - –Ω–∞—á–∏–Ω–∫–∞ –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
     *
     * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.stuffing –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç –Ω–∞—á–∏–Ω–∫—É
     *!/
    getStuffing() {}

    /!**
     * –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
     * @returns {Number} - –¶–µ–Ω–∞ –≤ –¥–µ–Ω—å–≥–∞—Ö
     *
     * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.price –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç —Å—É–º–º—É.
     *!/
    calculatePrice() {}

    /!**
     * –£–∑–Ω–∞—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å
     * @returns {Number} - –ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –≤ –∫–∞–ª–æ—Ä–∏—è—Ö
     *
     * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.calories –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç —Å—É–º–º—É.
     *!/
    calculateCalories() {}


/!*
  –†–∞–∑–º–µ—Ä—ã, –≤–∏–¥—ã –¥–æ–±–∞–≤–æ–∫ –∏ –Ω–∞—á–∏–Ω–æ–∫ –æ–±—ä—è–≤–∏—Ç–µ –∫–∞–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –∫–ª–∞—Å—Å–∞.
  –î–æ–±–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å–≤—É—é—â–∏–µ –ø–æ–ª—è –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–æ–º.
*!/
Hamburger.SIZE_SMALL = 'SIZE_SMALL'; //  –∫—Ä–∞—Å –¥–æ–±–∞–≤–∏–ª–∏  —ç
Hamburger.SIZE_LARGE = 'SIZE_LARGE';

Hamburger.SIZES = {
    [Hamburger.SIZE_SMALL]: {
        price: 30,
        calories: 50,
    },

    [Hamburger.SIZE_LARGE]: {
        price: 50,
        calories: 100,
    },
};
//Hamburger.SIZES[this_.size]price // —Ç–∞–∫ –≤–∏–∫–ª–∏–∫–∞—Ç–∏
Hamburger.STUFFING_CHEESE = 'STUFFING_CHEESE';
Hamburger.STUFFING_SALAD = 'STUFFING_SALAD';
Hamburger.STUFFING_MEAT = 'STUFFING_MEAT';

Hamburger.STUFFINGS = {
    [Hamburger.STUFFING_CHEESE]: {
        price: 15,
        calories: 20,
    },
    [Hamburger.STUFFING_SALAD]: {
        price: 20,
        calories: 5,
    },
    [Hamburger.STUFFING_MEAT]: {
        price: 35,
        calories: 15,
    },
};

Hamburger.TOPPING_SPICE = 'TOPPING_SPICE';
Hamburger.TOPPING_SAUCE = 'TOPPING_SAUCE';

Hamburger.TOPPINGS = {
    [Hamburger.TOPPING_SPICE]: {
        price: 10,
        calories: 0,
    },
    [Hamburger.TOPPING_SAUCE]: {
        price: 15,
        calories: 5,
    },
};

/!* –í–æ—Ç –∫–∞–∫ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ *!/

// –ú–∞–ª–µ–Ω—å–∫–∏–π –≥–∞–º–±—É—Ä–≥–µ—Ä —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ —Å—ã—Ä–∞
const hamburger = new Hamburger(Hamburger.SIZE_SMALL, Hamburger.STUFFING_CHEESE);

// –î–æ–±–∞–≤–∫–∞ –∏–∑ –ø—Ä–∏–ø—Ä–∞–≤—ã
hamburger.addTopping(Hamburger.TOPPING_SPICE);
// –°–ø—Ä–æ—Å–∏–º —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –∫–∞–ª–æ—Ä–∏–π
console.log("Calories: ", hamburger.calculateCalories());

// –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?
console.log("Price: ", hamburger.calculatePrice());

// –Ø —Ç—É—Ç –ø–µ—Ä–µ–¥—É–º–∞–ª –∏ —Ä–µ—à–∏–ª –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Å–æ—É—Å
hamburger.addTopping(Hamburger.TOPPING_SAUCE);

// –ê —Å–∫–æ–ª—å–∫–æ —Ç–µ–ø–µ—Ä—å —Å—Ç–æ–∏—Ç?
console.log("Price with sauce: ", hamburger.calculatePrice());

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –±–æ–ª—å—à–æ–π –ª–∏ –≥–∞–º–±—É—Ä–≥–µ—Ä?
console.log("Is hamburger large: ", hamburger.getSize() === Hamburger.SIZE_LARGE); // -> false

// –£–±—Ä–∞—Ç—å –¥–æ–±–∞–≤–∫—É
hamburger.removeTopping(Hamburger.TOPPING_SPICE);

// –°–º–æ—Ç—Ä–∏–º —Å–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–æ–∫
console.log("Hamburger has %d toppings", hamburger.getToppings().length); // 1*!/

/!*
  üîî –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã:
    	‚úîÔ∏è –∫–ª–∞—Å—Å –Ω–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –≤–Ω–µ—à–Ω–∏–º –º–∏—Ä–æ–º. –≠—Ç–æ –Ω–µ –µ–≥–æ –¥–µ–ª–æ, —ç—Ç–∏–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è
    		–¥—Ä—É–≥–æ–π –∫–æ–¥, –∞ –∫–ª–∞—Å—Å –∂–∏–≤–µ—Ç –≤ –∏–∑–æ–ª—è—Ü–∏–∏ –æ—Ç –º–∏—Ä–∞
    	‚úîÔ∏è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (—Ä–∞–∑–º–µ—Ä –∏ –Ω–∞—á–∏–Ω–∫–∞) –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä,
		—á—Ç–æ–±—ã –Ω–µ–ª—å–∑—è –±—ã–ª–æ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç, –Ω–µ —É–∫–∞–∑–∞–≤ –∏—Ö
    	‚úîÔ∏è –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ (–¥–æ–±–∞–≤–∫–∞) –¥–æ–±–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã
    	‚úîÔ∏è —Ç–∏–ø—ã –Ω–∞—á–∏–Ω–æ–∫ –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã "–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏" —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø—Ä–æ—Å—Ç–æ
	    	—Å–≤–æ–π—Å—Ç–≤–∞–º–∏, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–º –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å —Å—á–∏—Ç–∞—Ç—å "–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏")
    	‚úîÔ∏è –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π.
    	‚úîÔ∏è –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –æ–±—ä–µ–∫—Ç–∞ –≥–∞–º–±—É—Ä–≥–µ—Ä–∞ –ª–æ–≥–∏—á–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ä–∞–∑–º–µ—Ä, —Ç–∏–ø –Ω–∞—á–∏–Ω–∫–∏),
      		–∞ –Ω–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∏–∑ –Ω–∏—Ö (—Ü–µ–Ω–∞, —á–∏—Å–ª–æ –∫–∞–ª–æ—Ä–∏–π –∏ —Ç.–¥.). –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Ü–µ–Ω—É –∏ –∫–∞–ª–æ—Ä–∏–∏
		–ª–æ–≥–∏—á–Ω–æ –≤ —Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —ç—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, –∞ –Ω–µ –∑–∞—Ä–∞–Ω–µ–µ.
*!/
/!*
class Video {
    constructor(size, duration, title, format, hd, autor) {
        this.size = size;
        this.duration = duration;
        this.title = title;
        this.format = format;
        this.hd = hd;
        this.autor = autor;
    }

    getFullInfo() {
        return `${this.autor} ${this.title} ${this.size}`; // —Ñ—É–∫—Ü—ñ—è –ø–∏—à–µ—Ç—å—Å—è –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Å–ª–æ–≤–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø —ñ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ –ø–∏—à—É—Ç—å—Å—è
    };

    arhive(num) {
        this.size = parseFloat(this.size) / num + 'gb';
    };

    changeAutor(newAutor) {
        this.autor = newAutor;
    }

    changeTitle(newTitle) {
        this.title = newTitle;
    }

}

let video = new Video('1.5gb', '01:30:25', 'Genderfield V', 'MP-4', true, 'Dice');
video.arhive(2); //–¥—ñ–ª–∏–º–æ —Ä–æ–∑–º—ñ—Ä –Ω–∞ 2
video.changeAutor('BioWare'); // –º—ñ–Ω—è—î–º–æ –∞–≤—Ç–æ—Ä–∞
video.changeTitle('Anthem');// –º—ñ–Ω—è—î–º–æ –Ω–∞–∑–≤—É
console.log(video.getFullInfo());
console.log(video);*!/


/!*const Herro = function (name, level) {
    // this = {}
    // Hero.prototype = {}
    this.name = name;
    this.level = level;


};
const alister = new Herro('Alister', 1);
console.log(alister);

Herro.prototype.greet = function () {  // –°—Ç–≤–æ—Ä—é—î–∏–æ —Ñ—Ü—ñ—é Herro.prototype - —Ñ—É–µ—Ü—ñ—è —è–∫–æ—é –º–æ–∂—É—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å —É—Å—ñ
    console.log(`'Hello, I'm ${this.name}'`);
};
alister.greet();

const Warrior = function (name, level, weapon) { // —Ç–≤–æ—Ä–∏–ª–∏ –≥–µ—Ä–æ—è Warrior –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–º —è–∫–æ–≥–æ –µ Herro
    //this={}
    // Warrior.prototype ={};
    // Hero.prototype={}
    Herro.call(this, name, level);
    this.weapon = weapon;
};

Warrior.prototype = Object.create(Herro.prototype); /// —â–æ–± –ø—Ä–∏—Å–≤–æ—ó—Ç–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø—É–± —Å–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞
Warrior.prototype.constructor = Warrior;

Warrior.prototype.attack = function () {
    console.log(`${this.name}attacks with an ${this.weapon}`)
};
let gerald = new Warrior('Gerald', 1, 'sword');
console.log(gerald);
//// –ù–æ–≤–∏–π –≥–µ—Ä–æ–π

const Mag = function (name, level, weapon, magic) {
    Warrior.call(this, name, level, weapon);
    this.magic = magic;
};
Mag.prototype = Object.create(Warrior.prototype); /// —â–æ–± –ø—Ä–∏—Å–≤–æ—ó—Ç–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø—É–± —Å–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞
Mag.prototype.constructor = Mag;
Mag.prototype.magic = function () {
    console.log(`${this.name} magic ${this.magic}`)
};
let Bo = new Mag('BOO', 1, 'knife', 'ball');
console.log(Bo);*!/

*/